{
    "Home": "Home",
    "Complexity": "Complexity",
    "Dashboard": "Dashboard",
    "Meta-Feature": "Meta-Features",
    "Select-dataset": "Select dataset ...",
    "Drag-drop": "Drag and drop or select files",
    "Msg-load-file" : "The data to perform the functionalities has not been added, load a file to continue",
    "Welcome": "Welcome!",
    "welcome-card": "This application is designed to make data analysis and visualization both efficient and accurate. With our tools, you can easily create customized charts, calculate metafeatures, and evaluate the complexity of your data in a simple and intuitive way. Our goal is to provide you with the necessary tools to deepen your analysis, enabling you to select the most appropriate evaluation techniques and algorithms for your needs.",
    "Download-CSV": "Download CSV",
    "Unsoported-file": "Unsupported file format. Please upload a CSV, EXCEL or ARFF file.",
    "No-data": "No data loaded",
    "Go-back": "Go back to home",
    "Select-Input-Feature": "Select Input Feature:",
    "Select-Class-Feature": "Select Class Feature:",
    "Select-Graph-Type": "Select Graph Type:",
    "Generate-Plot": "Generate Plot",
    "Plot-Alert": "Please select both input features and a class feature.",
    "Scatter-Plot": "Scatter Plot",
    "Pie-Chart": "Pie Chart",
    "Histogram": "Histogram",
    "Line-Chart": "Line Chart",
    "Box-Plot": "Box Plot",
    "Heatmap": "Heatmap",
    "Calculate-Measures": "Calculate Measures",
    "Calculate-Meta-Features": "Calculate Meta-Features",
    "f1": "Maximum Fisher’s Discriminant Ratio: Measures how well the classes are separated relative to their internal variability. Higher values indicate that the classes are well-separated, making classification easier.",
    "f1v": "Directional-vector Maximum Fisher’s Discriminant Ratio: A variant of Fisher's Discriminant Ratio that considers the directions of the vectors. Lower values may indicate greater difficulty in class separation.",
    "f2": "Overlap of the Per-class Bounding Boxes: Measures the overlap between the bounding boxes of different classes. Higher values indicate more overlap, suggesting that classes are less well-separated and thus harder to classify correctly.",
    "f3": "Maximum Individual Feature Efficiency: Evaluates the efficiency of the best individual feature for separating classes. Values close to 1 indicate that at least one feature separates the classes very well.",
    "f4": "Collective Feature Efficiency: Similar to f3, but measures the combined efficiency of all features in separating classes. A value close to 1 indicates that the feature set is highly effective for class separation.",
    "l1": "Sum of the Error Distance by Linear Programming: Measures the difficulty of separating classes using a linear classifier via linear programming. Higher values indicate that finding a linear separation is more challenging.",
    "l2": "Error Rate of the Linear Classifier: The classification error rate of a simple linear classifier. Higher values indicate that the problem is more difficult from the perspective of a linear classifier.",
    "l3": "Non-linearity of the Linear Classifier: Measures the non-linearity of the problem concerning a linear classifier. Higher values indicate greater non-linearity and, therefore, more difficulty for linear classifiers.",
    "n1": "Fraction of Borderline Points: The proportion of instances that are near the decision boundary. A high value suggests that many instances are close to the boundary between classes, which can complicate classification.",
    "n2": "Ratio of Intra/Extra Class Nearest Neighbor Distance: The ratio of intra-class to extra-class nearest neighbor distances. A high value indicates that instances within the same class are closer to each other than to those of different classes, suggesting good class separation.",
    "n3": "Error Rate of the Nearest Neighbor Classifier: The error rate of a k-nearest neighbors (k-NN) classifier. A high value indicates that a k-NN classifier has difficulty distinguishing between classes.",
    "n4": "Non-linearity of the Nearest Neighbor Classifier: Measures the non-linearity of the problem with respect to a k-NN classifier. High values suggest that the problem does not fit well with proximity-based classification.",
    "t1": "Fraction of Hyperspheres Covering Data: The proportion of the data covered by the minimum hyperspheres necessary to cover all data instances. A high value may indicate that the data is well-concentrated.",
    "lsc": "Local Set Cardinality: Measures the average number of neighbors of the same class in the local environment of each instance. High values indicate a high local density of the same class, making classification easier.",
    "density": "Class Density: Measures the density of the class in the feature space. High values suggest that the instances within each class are densely packed.",
    "clsCoef": "Clustering Coefficient: The clustering coefficient measures the probability that two neighbors of an instance are also neighbors of each other. High values indicate a strong clustering structure, which can simplify classification.",
    "hubs": "Hubness: Measures the prevalence of hubs, which are data points that frequently appear as neighbors to other points. A high value can indicate that some points are central in the feature space, potentially affecting the problem's difficulty.",
    "t2": "Average Number of Discrete Domains: The average number of discrete domains into which the feature values are divided. Low values suggest that the attributes are more continuous.",
    "t3": "Normalized Entropy of the Discrete Domain: Measures the normalized entropy of the discrete feature domain. A low value indicates less uncertainty or variability in the discrete features.",
    "t4": "Mutual Information: Measures the amount of information shared between the features and the class labels. A low value indicates that the features are less informative with respect to the target class.",
    "c1": "Fraction of Uninformative Features: The proportion of features that do not provide relevant information for classification. A high value indicates that there are many redundant or irrelevant features.",
    "c2": "Feature Dependence: Measures the dependence between features. A high value suggests that the features are highly correlated with each other, which can affect the model's generalization ability.",
    "Metric": "Metric",
    "Feature": "Característica",
    "Meta-Features-of-the-group": "Meta-Features of the group",
    "Value": "Value",
    "Linearity-measures": "Linearity measures",
    "Feature-based-measures": "Feature based measures",
    "Class-imbalance-measures": "Class imbalance measures",
    "Dimensionality-measures": "Dimensionality measures",
    "Network-measures": "Network measures",
    "Neighborhood-measures": "Neighborhood measures",
    "attr_conc.mean" : "Concentration of the attributes, which measures how many distinct values the attributes in the dataset have. Mean is the average, and Sd is the standard deviation of this concentration.",
    "attr_conc.sd" : "Concentration of the attributes, which measures how many distinct values the attributes in the dataset have. Mean is the average, and Sd is the standard deviation of this concentration.",
    "attr_ent.mean" : "Entropy of the attributes. Entropy measures the amount of uncertainty or randomness in the attribute values. Mean is the average.",
    "attr_ent.sd" : "Entropy of the attributes. Entropy measures the amount of uncertainty or randomness in the attribute values. Sd is the standard deviation.",
    "attr_to_inst" : "Ratio between the number of attributes and the number of instances in the dataset.",
    "can_cor.mean" : "Canonical correlation. It measures the linear relationship between two sets of variables (e.g., attributes and classes). Mean is the average, and sd is the standard deviation of the canonical correlation.",
    "can_cor.sd" : "Canonical correlation. It measures the linear relationship between two sets of variables (e.g., attributes and classes). Mean is the average, and sd is the standard deviation of the canonical correlation.",
    "cat_to_num" : "Ratio between the number of categorical attributes and the number of numerical attributes.",
    "class_conc.mean" : "Class concentration, similar to attr_conc, but applied to the classes. Mean is the average, and sd is the standard deviation of this concentration.",
    "class_conc.sd" : "Class concentration, similar to attr_conc, but applied to the classes. Mean is the average, and sd is the standard deviation of this concentration.",
    "class_ent" : "Class entropy, measuring the uncertainty in the class distribution.",
    "cor.mean" : "Attribute correlation, measuring the strength and direction of the linear relationship between pairs of attributes. Mean is the average, and sd is the standard deviation of the correlation.",
    "cor.sd" : "Attribute correlation, measuring the strength and direction of the linear relationship between pairs of attributes. Mean is the average, and sd is the standard deviation of the correlation.",
    "cov.mean" : "Covariance between attributes, measuring the joint variability of two random variables. Mean is the average, and sd is the standard deviation of the covariance.",
    "cov.sd" : "Covariance between attributes, measuring the joint variability of two random variables. Mean is the average, and sd is the standard deviation of the covariance.",
    "eigenvalues.mean" : "Eigenvalues of the covariance matrix, reflecting the amount of variance explained by each principal component. Mean is the average, and sd is the standard deviation of these eigenvalues.", 
    "eigenvalues.sd" : "Eigenvalues of the covariance matrix, reflecting the amount of variance explained by each principal component. Mean is the average, and sd is the standard deviation of these eigenvalues.",
    "eq_num_attr" : "Number of attributes that have the same number of distinct values.",
    "freq_class.mean" : "Class frequency, mean is the average, and sd is the standard deviation of the class frequencies in the dataset.",
    "freq_class.sd" : "Class frequency, mean is the average, and sd is the standard deviation of the class frequencies in the dataset.",
    "g_mean.mean" : "Geometric mean of the attribute values. Mean is the average, and sd is the standard deviation of the geometric mean.",
    "g_mean.sd" : "Geometric mean of the attribute values. Mean is the average, and sd is the standard deviation of the geometric mean.",
    "gravity" : "Centroid or center of gravity of the data, a point in space that represents the center of mass of all data points.",
    "h_mean.mean" : "Harmonic mean of the attribute values. Mean is the average, and sd is the standard deviation of the harmonic mean.",
    "h_mean.sd" : "Harmonic mean of the attribute values. Mean is the average, and sd is the standard deviation of the harmonic mean.",
    "inst_to_attr" : "Ratio between the number of instances and the number of attributes in the dataset.",
    "iq_range.mean" : "Interquartile range of the attribute values. Mean is the average, and sd is the standard deviation of the interquartile range.",
    "iq_range.sd" : "Interquartile range of the attribute values. Mean is the average, and sd is the standard deviation of the interquartile range.",
    "joint_ent.mean" : "Joint entropy of pairs of attributes, measuring the combined uncertainty. Mean is the average, and sd is the standard deviation of the joint entropy.",
    "joint_ent.sd" : "Joint entropy of pairs of attributes, measuring the combined uncertainty. Mean is the average, and sd is the standard deviation of the joint entropy.",
    "kurtosis.mean" : "Kurtosis of the attribute values, measuring the sharpness or flatness of the distribution. Mean is the average, and sd is the standard deviation of the kurtosis.",
    "kurtosis.sd" : "Kurtosis of the attribute values, measuring the sharpness or flatness of the distribution. Mean is the average, and sd is the standard deviation of the kurtosis.",
    "lh_trace" : "Trace of the variance ratio matrix (ratio of within-class variance to total variance). It measures the separability of classes in terms of variance.",
    "mad.mean" : "Mean absolute deviation of the attribute values. Mean is the average, and sd is the standard deviation of the mean absolute deviation.",
    "mad.sd" : "Mean absolute deviation of the attribute values. Mean is the average, and sd is the standard deviation of the mean absolute deviation.",
    "max.mean" : "Maximum value of the attributes. Mean is the average, and sd is the standard deviation of the maximum values.",
    "max.sd" : "Maximum value of the attributes. Mean is the average, and sd is the standard deviation of the maximum values.",
    "mean.mean" : "Mean of the attribute values. Mean is the average, and sd is the standard deviation of the mean of the values.",
    "mean.sd" : "Mean of the attribute values. Mean is the average, and sd is the standard deviation of the mean of the values.",
    "median.mean" : "Median of the attribute values. Mean is the average, and sd is the standard deviation of the medians.",
    "median.sd" : "Median of the attribute values. Mean is the average, and sd is the standard deviation of the medians.",
    "min.mean" : "Minimum value of the attributes. Mean is the average, and sd is the standard deviation of the minimum values.",
    "min.sd" : "Minimum value of the attributes. Mean is the average, and sd is the standard deviation of the minimum values.",
    "mut_inf.mean" : "Mutual information between pairs of attributes, measuring the dependency between them. Mean is the average, and sd is the standard deviation of the mutual information.",
    "mut_inf.sd" : "Mutual information between pairs of attributes, measuring the dependency between them. Mean is the average, and sd is the standard deviation of the mutual information.",
    "nr_attr": "Number of attributes in the dataset.",
    "nr_bin" : "Number of binary attributes (which have only two possible values).",
    "nr_cat" : "Number of categorical attributes in the dataset.",
    "nr_class" : "Number of classes in the dataset.",
    "nr_cor_attr" : "Number of correlated attributes, usually those with a correlation above a threshold.",
    "nr_disc" : "Number of discrete attributes, those that have a limited number of values.",
    "nr_inst" : "Number of instances in the dataset.",
    "nr_norm" : "Number of normalized (scaled) attributes.",
    "nr_num" : "Number of numerical attributes in the dataset.",
    "nr_outliers" : "Number of outliers in the dataset.",
    "ns_ratio" : "Ratio between the number of instances of the most common class and the least common class.",
    "num_to_cat" : "Ratio between the number of numerical and categorical attributes.",
    "p_trace" : "Trace of the correlation matrix. It reflects the sum of the variances explained by the principal components.",
    "range.mean" : "Range of the attribute values. Mean is the average, and sd is the standard deviation of the ranges.",
    "range.sd" : "Range of the attribute values. Mean is the average, and sd is the standard deviation of the ranges.",
    "roy_root" : "Roy's root, a statistic related to the maximum canonical correlation.",
    "sd.mean" : "Standard deviation of the attribute values. Mean is the average, and sd is the standard deviation of the standard deviation.",
    "sd.sd" : "Standard deviation of the attribute values. Mean is the average, and sd is the standard deviation of the standard deviation.",
    "sd_ratio" : "Ratio between the standard deviation within classes and the total standard deviation.",
    "skewness.mean" : "Skewness of the attribute values, measuring the degree of asymmetry in the distribution.",
    "skewness.sd" : "Skewness of the attribute values, measuring the degree of asymmetry in the distribution.",
    "sparsity.mean" : "Sparsity of the attributes, which measures the proportion of null or zero values in the data. Mean is the average, and sd is the standard deviation of the sparsity.",
    "sparsity.sd" : "Sparsity of the attributes, which measures the proportion of null or zero values in the data. Mean is the average, and sd is the standard deviation of the sparsity.",
    "t_mean.mean" : "Truncated mean of the attribute values. The truncated mean is calculated by excluding a percentage of the most extreme values (e.g., the highest and lowest values). Mean is the average, and sd is the standard deviation of the truncated mean.",
    "t_mean.sd" : "Truncated mean of the attribute values. The truncated mean is calculated by excluding a percentage of the most extreme values (e.g., the highest and lowest values). Mean is the average, and sd is the standard deviation of the truncated mean.",
    "var.mean" : "Variance of the attribute values. Variance measures the dispersion of the data around the mean. Mean is the average, and sd is the standard deviation of the variance.",
    "var.sd" : "Variance of the attribute values. Variance measures the dispersion of the data around the mean. Mean is the average, and sd is the standard deviation of the variance.",
    "w_lambda" : "Wilks' Lambda statistic, used in multivariate analysis to measure the separation between groups. Lower values indicate better separation between classes."
}
